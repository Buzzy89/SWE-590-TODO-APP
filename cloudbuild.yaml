steps:
# Build Auth Service
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--platform=linux/amd64'
    - '-t'
    - 'gcr.io/yusuf-swe590/todo-app-auth:$COMMIT_SHA'
    - '-t'
    - 'gcr.io/yusuf-swe590/todo-app-auth:latest'
    - './auth-service'
  id: 'build-auth'

# Build Todo Service
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--platform=linux/amd64'
    - '-t'
    - 'gcr.io/yusuf-swe590/todo-app-todo:$COMMIT_SHA'
    - '-t'
    - 'gcr.io/yusuf-swe590/todo-app-todo:latest'
    - './todo-service'
  id: 'build-todo'

# Build Frontend
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--platform=linux/amd64'
    - '-t'
    - 'gcr.io/yusuf-swe590/todo-app-frontend:$COMMIT_SHA'
    - '-t'
    - 'gcr.io/yusuf-swe590/todo-app-frontend:latest'
    - './frontend'
  id: 'build-frontend'

# Push Auth Service
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    - 'gcr.io/yusuf-swe590/todo-app-auth:$COMMIT_SHA'
  waitFor: ['build-auth']
  id: 'push-auth'

# Push Todo Service
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    - 'gcr.io/yusuf-swe590/todo-app-todo:$COMMIT_SHA'
  waitFor: ['build-todo']
  id: 'push-todo'

# Push Frontend
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    - 'gcr.io/yusuf-swe590/todo-app-frontend:$COMMIT_SHA'
  waitFor: ['build-frontend']
  id: 'push-frontend'

# Deploy Auth Service
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'todo-app-auth-dev'
    - '--image=gcr.io/yusuf-swe590/todo-app-auth:$COMMIT_SHA'
    - '--region=europe-west1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--memory=512Mi'
    - '--cpu=1'
    - '--max-instances=3'
    - '--min-instances=0'
  waitFor: ['push-auth']
  id: 'deploy-auth'

# Deploy Todo Service
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'todo-app-todo-dev'
    - '--image=gcr.io/yusuf-swe590/todo-app-todo:$COMMIT_SHA'
    - '--region=europe-west1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--memory=512Mi'
    - '--cpu=1'
    - '--max-instances=3'
    - '--min-instances=0'
  waitFor: ['push-todo', 'deploy-auth']
  id: 'deploy-todo'

# Deploy Frontend
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'todo-app-frontend-dev'
    - '--image=gcr.io/yusuf-swe590/todo-app-frontend:$COMMIT_SHA'
    - '--region=europe-west1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--memory=256Mi'
    - '--cpu=1'
    - '--max-instances=3'
    - '--min-instances=0'
  waitFor: ['push-frontend', 'deploy-todo']
  id: 'deploy-frontend'

# Test deployments
- name: 'gcr.io/cloud-builders/curl'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      echo "Testing deployed services..."
      
      # Get service URLs
      AUTH_URL=$(gcloud run services describe todo-app-auth-dev --region=europe-west1 --format='value(status.url)')
      TODO_URL=$(gcloud run services describe todo-app-todo-dev --region=europe-west1 --format='value(status.url)')
      FRONTEND_URL=$(gcloud run services describe todo-app-frontend-dev --region=europe-west1 --format='value(status.url)')
      
      echo "Auth Service URL: $AUTH_URL"
      echo "Todo Service URL: $TODO_URL"
      echo "Frontend URL: $FRONTEND_URL"
      
      # Test health endpoints
      curl -f $AUTH_URL/health || exit 1
      curl -f $TODO_URL/health || exit 1
      curl -f $FRONTEND_URL/health || exit 1
      
      echo "All services are healthy!"
  waitFor: ['deploy-frontend']

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'

timeout: '1200s'  # 20 minutes

images:
  - 'gcr.io/yusuf-swe590/todo-app-auth:$COMMIT_SHA'
  - 'gcr.io/yusuf-swe590/todo-app-auth:latest'
  - 'gcr.io/yusuf-swe590/todo-app-todo:$COMMIT_SHA'
  - 'gcr.io/yusuf-swe590/todo-app-todo:latest'
  - 'gcr.io/yusuf-swe590/todo-app-frontend:$COMMIT_SHA'
  - 'gcr.io/yusuf-swe590/todo-app-frontend:latest' 